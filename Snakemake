# Script for running Quality control and Allignment 

import pandas as pd

# load info of Sample name and its pairend File Name
file_path = "C:\Users\Parth Doshi\Desktop\ATAC-seq\ATAC-seq-peak-calling\Sample_Paired_end_Info.csv"
Paired_end_info = pd.read_csv(file_path,sep=",")

# Creating tuple with Paired-end reads 
Reads = list(zip(Paired_end_info['File accession'],Paired_end_info['Paired with']))


# Rule all specifies the final outputs
rule all:
    input:
        expand("fastqc_reports/{sample[0]}_fastqc.html", sample=Reads),
        expand("fastqc_reports/{sample[1]}_fastqc.html", sample=Reads),
        expand("aligned/{sample[0]}.bam", sample=Reads)


# # Rule for running FastQC on both reads of the pair
rule fastqc:
    input:
        read1="DATA/{sample[0]}",
        read2="DATA/{sample[1]}"
    output:
        report1="fastqc_reports/{sample[0]}_fastqc.html",
        report2="fastqc_reports/{sample[1]}_fastqc.html"
    shell:
        """
        fastqc {input.read1} --outdir fastqc_reports
        fastqc {input.read2} --outdir fastqc_reports
        """

 Rule for alignment using bwa (assuming paired-end data)
rule align:
    input:
        read1="DATA/{sample[0]}",
        read2="DATA/{sample[1]}",
        index="reference_genome/genome.fa"  # Adjust the path to your reference genome
    output:
        "aligned/{sample[0]}.bam"
    shell:
        """
        bwa mem {input.index} {input.read1} {input.read2} | \
        samtools sort -o {output}
        samtools index {output}
        """